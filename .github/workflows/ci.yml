name: CI

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]
    paths-ignore:
      - '**/*.md'
      - '!.github/workflows/ci.yml'
  push:
    branches:
      - main
      - "renovate/**"
    paths-ignore:
      - '**/*.md'
      - '!.github/workflows/ci.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: ${{ github.ref_name != 'main' }}

defaults:
  run:
    shell: bash

jobs:
  cache: # Warm cache factory for all other CI jobs
    name: Check and Build
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: windows-latest
          - os: ubuntu-latest
          - os: macos-14
    runs-on: ${{ matrix.os }}
    steps:
      - uses: taiki-e/checkout-action@v1

      - uses: Boshen/setup-rust@main
        with:
          save-cache: ${{ github.ref_name == 'main' }}
          cache-key: warm

      - run: cargo check --all-features --locked

      # Only need to build the test to create a warm cache on the main branch
      - name: Build cache by Cargo Check and Cargo Test
        if: ${{ github.ref_name == 'main' }}
        run: cargo test --all-features --no-run

  wasm:
    name: Check Wasm
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/checkout-action@v1

      - uses: Boshen/setup-rust@main
        with:
          cache-key: wasm
          save-cache: ${{ github.ref_name == 'main' }}

      - name: Check
        run: |
          rustup target add wasm32-unknown-unknown
          cargo check --all-features --target wasm32-unknown-unknown

  wasi:
    name: Test wasi target
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/checkout-action@v1

      - uses: Boshen/setup-rust@main
        with:
          cache-key: wasi
          save-cache: ${{ github.ref_name == 'main' }}

      - uses: ./.github/actions/pnpm

      - name: Build
        run: |
          rustup target add wasm32-wasip1-threads
          pnpm build --target wasm32-wasip1-threads

      - name: Test
        run: pnpm test
        env:
          WASI_TEST: 1

  typos:
    name: Spell Check
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/checkout-action@v1

      - uses: crate-ci/typos@v1.28.2
        with:
          files: .

  lint:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/checkout-action@v1
      - uses: Boshen/setup-rust@main
        with:
          components: clippy
      - run: cargo clippy --all-features -- -D warnings

  doc:
    name: Doc
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/checkout-action@v1
      - uses: Boshen/setup-rust@main
        with:
          components: rust-docs
      - run: RUSTDOCFLAGS='-D warnings' cargo doc --no-deps --all-features

  test:
    name: Test
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: windows-latest
          - os: ubuntu-latest
          - os: macos-14
    runs-on: ${{ matrix.os }}
    env:
      RUST_BACKTRACE: 1
    steps:
      - uses: taiki-e/checkout-action@v1
      - uses: ./.github/actions/pnpm
      - uses: Boshen/setup-rust@main
        with:
          cache-key: warm
      - run: cargo test --doc
      - run: cargo test --all-features
